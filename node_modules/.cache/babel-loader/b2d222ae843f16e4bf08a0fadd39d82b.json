{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: 'ui',\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const NewItem = action.payload;\n      const IsExistingItem = state.items.find(item => item.id === NewItem.id);\n      state.totalQuantity++;\n\n      if (!IsExistingItem) {\n        state.items.push({\n          itemId: NewItem.id,\n          price: NewItem.price,\n          quantity: 1,\n          totalPrice: NewItem.price,\n          name: NewItem.title\n        });\n      } else {\n        IsExistingItem.quantity++;\n        IsExistingItem.totalPrice = IsExistingItem.totalPrice + NewItem.price;\n      }\n    },\n\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      let IsExistingItem = state.items.find(item => item.id === id);\n      state.totalQuantity++;\n\n      if (IsExistingItem.quantity === 1) {\n        IsExistingItem = state.items.filter(item => item.id !== id);\n      } else {\n        IsExistingItem.quantity--;\n      }\n    }\n\n  }\n});\nexport const cartAction = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"sources":["C:/Users/amers/Desktop/study/react-course/section19/01-starting-project/01-starting-project/src/store/cart-slice.js"],"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","reducers","addItemToCart","state","action","NewItem","payload","IsExistingItem","find","item","id","push","itemId","price","quantity","totalPrice","title","removeItemFromCart","filter","cartAction","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAC1BE,EAAAA,IAAI,EAAE,IADoB;AAE1BC,EAAAA,YAAY,EAAE;AAAEC,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,aAAa,EAAE;AAA5B,GAFY;AAG1BC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,aAAa,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACzB,YAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;AACA,YAAMC,cAAc,GAAGJ,KAAK,CAACJ,KAAN,CAAYS,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYL,OAAO,CAACK,EAA7C,CAAvB;AACAP,MAAAA,KAAK,CAACH,aAAN;;AACA,UAAI,CAACO,cAAL,EAAqB;AACjBJ,QAAAA,KAAK,CAACJ,KAAN,CAAYY,IAAZ,CAAiB;AAAEC,UAAAA,MAAM,EAAEP,OAAO,CAACK,EAAlB;AAAsBG,UAAAA,KAAK,EAAER,OAAO,CAACQ,KAArC;AAA4CC,UAAAA,QAAQ,EAAE,CAAtD;AAAyDC,UAAAA,UAAU,EAAEV,OAAO,CAACQ,KAA7E;AAAoFhB,UAAAA,IAAI,EAAEQ,OAAO,CAACW;AAAlG,SAAjB;AACH,OAFD,MAEO;AACHT,QAAAA,cAAc,CAACO,QAAf;AACAP,QAAAA,cAAc,CAACQ,UAAf,GAA4BR,cAAc,CAACQ,UAAf,GAA4BV,OAAO,CAACQ,KAAhE;AAEH;AAEJ,KAbK;;AAcJI,IAAAA,kBAAkB,CAACd,KAAD,EAAQC,MAAR,EAAgB;AAChC,YAAMM,EAAE,GAAGN,MAAM,CAACE,OAAlB;AACA,UAAIC,cAAc,GAAGJ,KAAK,CAACJ,KAAN,CAAYS,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAArC,CAArB;AACAP,MAAAA,KAAK,CAACH,aAAN;;AAEA,UAAIO,cAAc,CAACO,QAAf,KAA4B,CAAhC,EAAmC;AAC/BP,QAAAA,cAAc,GAAGJ,KAAK,CAACJ,KAAN,CAAYmB,MAAZ,CAAmBT,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAAvC,CAAjB;AAEH,OAHD,MAGO;AACHH,QAAAA,cAAc,CAACO,QAAf;AACH;AAEJ;;AA1BK;AAHgB,CAAD,CAA7B;AAgCA,OAAO,MAAMK,UAAU,GAAGvB,SAAS,CAACwB,OAA7B;AACP,eAAexB,SAAf","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\"\r\nconst cartSlice = createSlice({\r\n    name: 'ui',\r\n    initialState: { items: [], totalQuantity: 0 },\r\n    reducers: {\r\n        addItemToCart(state, action) {\r\n            const NewItem = action.payload\r\n            const IsExistingItem = state.items.find(item => item.id === NewItem.id)\r\n            state.totalQuantity++\r\n            if (!IsExistingItem) {\r\n                state.items.push({ itemId: NewItem.id, price: NewItem.price, quantity: 1, totalPrice: NewItem.price, name: NewItem.title })\r\n            } else {\r\n                IsExistingItem.quantity++\r\n                IsExistingItem.totalPrice = IsExistingItem.totalPrice + NewItem.price\r\n\r\n            }\r\n\r\n        }\r\n        , removeItemFromCart(state, action) {\r\n            const id = action.payload\r\n            let IsExistingItem = state.items.find(item => item.id === id)\r\n            state.totalQuantity++\r\n\r\n            if (IsExistingItem.quantity === 1) {\r\n                IsExistingItem = state.items.filter(item => item.id !== id)\r\n\r\n            } else {\r\n                IsExistingItem.quantity--\r\n            }\r\n\r\n        }\r\n    }\r\n})\r\nexport const cartAction = cartSlice.actions\r\nexport default cartSlice"]},"metadata":{},"sourceType":"module"}