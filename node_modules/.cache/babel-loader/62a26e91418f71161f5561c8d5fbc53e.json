{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: 'ui',\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const NewItem = action.payload;\n      const IsExistingItem = state.items.find(item => item.id === NewItem.id);\n      state.totalQuantity++;\n\n      if (!IsExistingItem) {\n        state.items.push({\n          id: NewItem.id,\n          price: NewItem.price,\n          quantity: 1,\n          totalPrice: NewItem.price,\n          name: NewItem.title\n        });\n      } else {\n        IsExistingItem.quantity++;\n        IsExistingItem.totalPrice = IsExistingItem.totalPrice + NewItem.price;\n      }\n    },\n\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const IsExistingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n\n      if (IsExistingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        IsExistingItem.quantity--;\n        IsExistingItem.totalPrice = IsExistingItem.totalPrice - NewItem.price;\n      }\n    }\n\n  }\n});\nexport const cartAction = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"sources":["C:/Users/amers/Desktop/study/react-course/section19/01-starting-project/01-starting-project/src/store/cart-slice.js"],"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","reducers","addItemToCart","state","action","NewItem","payload","IsExistingItem","find","item","id","push","price","quantity","totalPrice","title","removeItemFromCart","filter","cartAction","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAC1BE,EAAAA,IAAI,EAAE,IADoB;AAE1BC,EAAAA,YAAY,EAAE;AAAEC,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,aAAa,EAAE;AAA5B,GAFY;AAG1BC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,aAAa,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACzB,YAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;AACA,YAAMC,cAAc,GAAGJ,KAAK,CAACJ,KAAN,CAAYS,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYL,OAAO,CAACK,EAA7C,CAAvB;AACAP,MAAAA,KAAK,CAACH,aAAN;;AACA,UAAI,CAACO,cAAL,EAAqB;AACjBJ,QAAAA,KAAK,CAACJ,KAAN,CAAYY,IAAZ,CAAiB;AAAED,UAAAA,EAAE,EAAEL,OAAO,CAACK,EAAd;AAAkBE,UAAAA,KAAK,EAAEP,OAAO,CAACO,KAAjC;AAAwCC,UAAAA,QAAQ,EAAE,CAAlD;AAAqDC,UAAAA,UAAU,EAAET,OAAO,CAACO,KAAzE;AAAgFf,UAAAA,IAAI,EAAEQ,OAAO,CAACU;AAA9F,SAAjB;AACH,OAFD,MAEO;AACHR,QAAAA,cAAc,CAACM,QAAf;AACAN,QAAAA,cAAc,CAACO,UAAf,GAA4BP,cAAc,CAACO,UAAf,GAA4BT,OAAO,CAACO,KAAhE;AAEH;AAEJ,KAbK;;AAcJI,IAAAA,kBAAkB,CAACb,KAAD,EAAQC,MAAR,EAAgB;AAChC,YAAMM,EAAE,GAAGN,MAAM,CAACE,OAAlB;AACA,YAAMC,cAAc,GAAGJ,KAAK,CAACJ,KAAN,CAAYS,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAArC,CAAvB;AACAP,MAAAA,KAAK,CAACH,aAAN;;AACA,UAAIO,cAAc,CAACM,QAAf,KAA4B,CAAhC,EAAmC;AAC/BV,QAAAA,KAAK,CAACJ,KAAN,GAAcI,KAAK,CAACJ,KAAN,CAAYkB,MAAZ,CAAmBR,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAAvC,CAAd;AAEH,OAHD,MAGO;AACHH,QAAAA,cAAc,CAACM,QAAf;AACAN,QAAAA,cAAc,CAACO,UAAf,GAA4BP,cAAc,CAACO,UAAf,GAA4BT,OAAO,CAACO,KAAhE;AAEH;AAEJ;;AA3BK;AAHgB,CAAD,CAA7B;AAiCA,OAAO,MAAMM,UAAU,GAAGtB,SAAS,CAACuB,OAA7B;AACP,eAAevB,SAAf","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\"\r\nconst cartSlice = createSlice({\r\n    name: 'ui',\r\n    initialState: { items: [], totalQuantity: 0 },\r\n    reducers: {\r\n        addItemToCart(state, action) {\r\n            const NewItem = action.payload\r\n            const IsExistingItem = state.items.find(item => item.id === NewItem.id)\r\n            state.totalQuantity++\r\n            if (!IsExistingItem) {\r\n                state.items.push({ id: NewItem.id, price: NewItem.price, quantity: 1, totalPrice: NewItem.price, name: NewItem.title })\r\n            } else {\r\n                IsExistingItem.quantity++\r\n                IsExistingItem.totalPrice = IsExistingItem.totalPrice + NewItem.price\r\n\r\n            }\r\n\r\n        }\r\n        , removeItemFromCart(state, action) {\r\n            const id = action.payload\r\n            const IsExistingItem = state.items.find(item => item.id === id)\r\n            state.totalQuantity--\r\n            if (IsExistingItem.quantity === 1) {\r\n                state.items = state.items.filter(item => item.id !== id)\r\n\r\n            } else {\r\n                IsExistingItem.quantity--\r\n                IsExistingItem.totalPrice = IsExistingItem.totalPrice - NewItem.price\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n})\r\nexport const cartAction = cartSlice.actions\r\nexport default cartSlice"]},"metadata":{},"sourceType":"module"}